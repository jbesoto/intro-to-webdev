/* Global Styles */

* {
  /* Makes life easier. Why? */
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Courier New", Courier, monospace;
}

img {
  /* 
    Ass-saver. Why?
    */
  width: 100%;
  height: auto;
}

/* Flexbox simple row layouts */

.container {
  display: flex;
  /* For desktop first, wdym? */
  flex-direction: row;
  flex-wrap: wrap;
  border: 1px solid purple;
  /* 30% opacity */
  background-color: rgba(255, 0, 255, 0.3);
  /* 
        If the content within the div is empty or has no explicit 
        height, the div's height will collapse to zero.
    */
  min-height: 400px;
}

.item {
  border: 1px solid cornflowerblue;
  background-color: rgba(0, 0, 255, 0.3);
  width: 23%;
  min-height: 300px;
}

/* 
    Atomic CSS: applying small, single-purpose classes directly 
    to the HTML elements
*/

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-even {
  justify-content: space-evenly;
}

.align-start {
  align-items: flex-start;
}

.align-end {
  align-items: flex-end;
}

.align-center {
  align-items: center;
}

.self-start {
  /*
        Align selg applies to individual flex items within
        flex container. 
        
        IMPORTANT: It overrides `align-items` for a specific
        flex item
    */
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
  height: auto;
}

@media screen and (max-width: 768px) {
  /* Overiding the class' style */
  .container {
    flex-direction: column;
  }

  /* 
    If anythig with flexbox and value stretch isn't
    stretching, it's because you have 
  */
  .self-stretch {
    height: 300px;
    width: auto;
  }
}

/* Classic Layout Example */

head {
  display: flex;
  width: 100%;
  min-height: 100px;
  background-color: aqua;
}

/* Very IMPORTANT */
.wrapper {
  display: flex;
  flex-direction: row;
}

.grid-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  /* Change this to flex- */
  justify-content: flex-start;
  align-items: center;
  background-color: darkcyan;
}

.grid-item {
  width: 23%;
  margin: 1%;
}

.secondary-nav {
  min-width: 25%;
  background-color: aquamarine;
}

.menu {
  /* remove list defaults */
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.menu li {
  border-bottom: 1px solid gray;
}

.menu span {
  padding: 1rem;
  font-size: 2rem;
}

.menu a {
  text-decoration: none;
  font-weight: 600; /* 800 is bold, 400 is regular */
  color: #111;
  width: 100%;
  display: flex;
  align-items: center;
}

.menu a:hover {
  background-color: rgba(0, 0, 0, 0.1);
  transition: 0.5s;
}

footer {
  background-color: coral;
  display: flex;
}

@media screen and (max-width: 1024px) {
  .grid-item {
    width: 48%;
  }
}

@media screen and (max-width: 768px) {
  .wrapper {
    flex-direction: column;
  }

  .secondary-nav {
    /* 
    Only for flexboxes.
    Modifies order in which boxes are displayed when stacking
    */
    order: 1;
  }

  .grid-container {
    flex-direction: column;
    order: 2;
  }

  .grid-item {
    width: 95%;
  }
}

/* 
things to work on:
- flex direction
*/
